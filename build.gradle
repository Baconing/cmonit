import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.jetbrains.kotlin.gradle.tasks.KotlinJvmCompile

plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id "org.jetbrains.kotlin.plugin.noarg" version "2.0.0"
}

group = "ng.baconi"
version = "1.0-SNAPSHOT"

repositories {
    mavenCentral()
    maven { url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
    maven { url = "https://jitpack.io" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    compileOnly "org.spigotmc:spigot-api:1.20.6-R0.1-SNAPSHOT"

    compileOnly "net.kyori:adventure-platform-bukkit:4.3.3"
    implementation "net.kyori:adventure-text-minimessage:4.17.0"

    implementation "com.github.Revxrsal.Lamp:common:3.2.1"
    implementation "com.github.Revxrsal.Lamp:bukkit:3.2.1"

    implementation "com.j256.ormlite:ormlite-core:5.6"
    implementation "com.j256.ormlite:ormlite-jdbc:5.6"

    compileOnly "com.github.plan-player-analytics:Plan:5.6.2883"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

compileJava {
    options.compilerArgs += ["-parameters"]
}


shadowJar {
    relocate('kotlin', 'ng.baconi.libs.kotlin')
}

noArg {
    annotation("ng.baconi.cmonit.NoArg")
}

build.dependsOn shadowJar